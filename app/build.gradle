buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("/Users/jvivanco/Dev/android-keystores/PegCityTransit/keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "jessevivanco.com.pegcitytransit"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 4
        versionName "1.0.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Dependencies for testing
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'

    // Android specific stuff
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    // Google Maps
    implementation 'com.google.android.gms:play-services-maps:15.0.0'
    implementation 'com.google.android.gms:play-services-location:15.0.0'

    // Dagger 2 dependency injector
    // https://github.com/codepath/android_guides/wiki/Dependency-Injection-with-Dagger-2
    implementation 'com.google.dagger:dagger:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'

    // REST API communication.
    // http://square.github.io/retrofit/
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.7.0'

    // RxJava2, RxAndroid (reactive bindings for Android), and RxJava2 CallAdapter for Retrofit
    // https://github.com/ReactiveX/RxJava
    // https://github.com/ReactiveX/RxAndroid
    // https://github.com/square/retrofit/tree/master/retrofit-adapters/rxjava2
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'

    // Image Loading
    // http://square.github.io/picasso/
    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Material design icons from https://materialdesignicons.com/.
    // https://github.com/JoanZapata/android-iconify
    implementation 'com.joanzapata.iconify:android-iconify-material:2.2.2'

    // Custom fonts
    // https://github.com/chrisjenx/Calligraphy
    implementation 'uk.co.chrisjenx:calligraphy:2.2.0'

    // Android string formatting
    // https://github.com/square/phrase
    implementation 'com.squareup.phrase:phrase:1.1.0'

    // Butterknife View Binding
    // https://github.com/JakeWharton/butterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // FlowLayout
    // https://github.com/nex3z/FlowLayout
    implementation 'com.nex3z:flow-layout:1.1.0'

    // Easier RxJava2 debugging with better stacktraces
    // https://github.com/T-Spoon/Traceur
    implementation 'com.tspoon.traceur:traceur:1.0.1'

    // Android Parcelables made easy through code generation
    // https://github.com/johncarl81/parceler
    implementation 'org.parceler:parceler-api:1.1.9'
    annotationProcessor 'org.parceler:parceler:1.1.9'

    // https://github.com/airbnb/lottie-android
    // Render After Effects animations natively on Android and iOS
    implementation 'com.airbnb.android:lottie:2.0.0-rc1'

    // Handy extensions to the Google Maps Android API.
    // https://github.com/googlemaps/android-maps-utils
    implementation 'com.google.maps.android:android-maps-utils:0.5'

    // A simple cache for Objects in Android (Thanks Iain!).
    // https://github.com/iainconnor/ObjectCache
    implementation 'com.iainconnor:objectcache:0.0.19-SNAPSHOT'

    // Lightweight Animation Library
    // https://github.com/willowtreeapps/spruce-android
    implementation 'com.willowtreeapps.spruce:spruce-android:1.0.1'

    // Shared Preferences helper
    // https://github.com/Pixplicity/EasyPreferences
    implementation 'com.pixplicity.easyprefs:library:1.9.0@aar'

    // Report crashes.
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://raw.github.com/iainconnor/ObjectCache/master/maven/'
    }
    maven { url 'https://maven.fabric.io/public' }
    maven { url "http://dl.bintray.com/pixplicity/maven" }
}
